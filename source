-- Ambience UI Library
-- Recreates the exact design from your GUI

local Library = {}
Library.__index = Library

-- Services
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

-- Variables
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()

-- Library Properties
Library.Accent = Color3.fromRGB(88, 146, 255)
Library.Flags = {}
Library.Connections = {}
Library.ThemeObjects = {}
Library.Pages = {}
Library.CurrentPage = nil
Library.ScreenGUI = nil

-- Utility Functions
function Library:Connection(Signal, Callback)
    local Connection = Signal:Connect(Callback)
    table.insert(self.Connections, Connection)
    return Connection
end

function Library:Tween(Object, Properties, Duration, Style, Direction)
    Duration = Duration or 0.25
    Style = Style or Enum.EasingStyle.Quad
    Direction = Direction or Enum.EasingDirection.Out
    
    return TweenService:Create(Object, TweenInfo.new(Duration, Style, Direction), Properties)
end

function Library:IsMouseOver(Frame)
    local AbsPos, AbsSize = Frame.AbsolutePosition, Frame.AbsoluteSize
    return Mouse.X >= AbsPos.X and Mouse.X <= AbsPos.X + AbsSize.X and 
           Mouse.Y >= AbsPos.Y and Mouse.Y <= AbsPos.Y + AbsSize.Y
end

-- Main Library Functions
function Library:CreateWindow(Options)
    Options = Options or {}
    
    local Window = {
        Name = Options.Name or "Ambience",
        Pages = {},
        Dragging = false,
        DragStart = nil,
        StartPos = nil
    }
    
    -- Create ScreenGUI
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "AmbienceUI"
    ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    Library.ScreenGUI = ScreenGui
    
    -- Main Frame
    local Mainframe = Instance.new("Frame")
    Mainframe.Name = "Mainframe"
    Mainframe.Parent = ScreenGui
    Mainframe.BackgroundColor3 = Color3.fromRGB(36, 42, 50)
    Mainframe.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Mainframe.BorderSizePixel = 0
    Mainframe.Position = UDim2.new(0.5, -370, 0.5, -269)
    Mainframe.Size = UDim2.new(0, 740, 0, 539)
    
    local MainCorner = Instance.new("UICorner")
    MainCorner.CornerRadius = UDim.new(0, 6)
    MainCorner.Parent = Mainframe
    
    -- Tab Holder (Left Sidebar)
    local TabHolder = Instance.new("Frame")
    TabHolder.Name = "TabHolder"
    TabHolder.Parent = Mainframe
    TabHolder.BackgroundColor3 = Color3.fromRGB(45, 53, 63)
    TabHolder.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TabHolder.BorderSizePixel = 0
    TabHolder.Size = UDim2.new(0, 153, 0, 539)
    
    local TabCorner = Instance.new("UICorner")
    TabCorner.CornerRadius = UDim.new(0, 6)
    TabCorner.Parent = TabHolder
    
    -- Button Holder
    local ButtonHolder = Instance.new("Frame")
    ButtonHolder.Name = "ButtonHolder"
    ButtonHolder.Parent = TabHolder
    ButtonHolder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ButtonHolder.BackgroundTransparency = 1.000
    ButtonHolder.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ButtonHolder.BorderSizePixel = 0
    ButtonHolder.Position = UDim2.new(0, 0, 0.06, 0)
    ButtonHolder.Size = UDim2.new(0, 153, 0, 469)
    
    local ButtonLayout = Instance.new("UIListLayout")
    ButtonLayout.Parent = ButtonHolder
    ButtonLayout.SortOrder = Enum.SortOrder.LayoutOrder
    ButtonLayout.Padding = UDim.new(0, 30)
    
    -- Border Line
    local Border = Instance.new("Frame")
    Border.Name = "Border"
    Border.Parent = Mainframe
    Border.BackgroundColor3 = Color3.fromRGB(28, 33, 39)
    Border.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Border.BorderSizePixel = 0
    Border.Position = UDim2.new(0.206, 0, 0, 0)
    Border.Size = UDim2.new(0, 1, 0, 539)
    
    -- Tab Names
    local TabNames = Instance.new("Frame")
    TabNames.Name = "TabNames"
    TabNames.Parent = Mainframe
    TabNames.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TabNames.BackgroundTransparency = 1.000
    TabNames.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TabNames.BorderSizePixel = 0
    TabNames.Position = UDim2.new(0.018, 0, 0.014, 0)
    TabNames.Size = UDim2.new(0, 139, 0, 493)
    
    -- Feature Holder (Main Content Area)
    local FeatureHolder = Instance.new("Frame")
    FeatureHolder.Name = "FeatureHolder"
    FeatureHolder.Parent = Mainframe
    FeatureHolder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    FeatureHolder.BackgroundTransparency = 1.000
    FeatureHolder.BorderColor3 = Color3.fromRGB(0, 0, 0)
    FeatureHolder.BorderSizePixel = 0
    FeatureHolder.Position = UDim2.new(0.227, 0, 0.015, 0)
    FeatureHolder.Size = UDim2.new(0, 559, 0, 523)
    
    -- Title
    local TextLabel = Instance.new("TextLabel")
    TextLabel.Parent = FeatureHolder
    TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TextLabel.BackgroundTransparency = 1.000
    TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TextLabel.BorderSizePixel = 0
    TextLabel.Size = UDim2.new(0, 200, 0, 25)
    TextLabel.Font = Enum.Font.Unknown
    TextLabel.Text = Window.Name
    TextLabel.TextColor3 = Color3.fromRGB(191, 191, 191)
    TextLabel.TextSize = 22.000
    TextLabel.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Left Section
    local LeftSection = Instance.new("Frame")
    LeftSection.Name = "LeftSection"
    LeftSection.Parent = FeatureHolder
    LeftSection.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    LeftSection.BackgroundTransparency = 1.000
    LeftSection.BorderColor3 = Color3.fromRGB(0, 0, 0)
    LeftSection.BorderSizePixel = 0
    LeftSection.Position = UDim2.new(0, 0, 0.109, 0)
    LeftSection.Size = UDim2.new(0, 270, 0, 459)
    
    local LeftLayout = Instance.new("UIListLayout")
    LeftLayout.Parent = LeftSection
    LeftLayout.SortOrder = Enum.SortOrder.LayoutOrder
    LeftLayout.Padding = UDim.new(0, 10)
    
    -- Right Section
    local RightSection = Instance.new("Frame")
    RightSection.Name = "RightSection"
    RightSection.Parent = FeatureHolder
    RightSection.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    RightSection.BackgroundTransparency = 1.000
    RightSection.BorderColor3 = Color3.fromRGB(0, 0, 0)
    RightSection.BorderSizePixel = 0
    RightSection.Position = UDim2.new(0.513, 0, 0.109, 0)
    RightSection.Size = UDim2.new(0, 270, 0, 459)
    
    local RightLayout = Instance.new("UIListLayout")
    RightLayout.Parent = RightSection
    RightLayout.SortOrder = Enum.SortOrder.LayoutOrder
    RightLayout.Padding = UDim.new(0, 10)
    
    -- Close/Minimize buttons
    local CloseButton = Instance.new("ImageLabel")
    CloseButton.Parent = Mainframe
    CloseButton.BackgroundTransparency = 1.000
    CloseButton.BorderSizePixel = 0
    CloseButton.Position = UDim2.new(0.946, 0, 0.019, 0)
    CloseButton.Size = UDim2.new(0, 25, 0, 25)
    CloseButton.Image = "http://www.roblox.com/asset/?id=6031280882"
    
    local MinimizeButton = Instance.new("ImageLabel")
    MinimizeButton.Parent = Mainframe
    MinimizeButton.BackgroundTransparency = 1.000
    MinimizeButton.BorderSizePixel = 0
    MinimizeButton.Position = UDim2.new(0.893, 0, 0.019, 0)
    MinimizeButton.Size = UDim2.new(0, 28, 0, 28)
    MinimizeButton.Image = "http://www.roblox.com/asset/?id=6031154871"
    
    -- Dragging functionality
    self:Connection(Mainframe.InputBegan, function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            Window.Dragging = true
            Window.DragStart = input.Position
            Window.StartPos = Mainframe.Position
        end
    end)
    
    self:Connection(UserInputService.InputChanged, function(input)
        if Window.Dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - Window.DragStart
            Mainframe.Position = UDim2.new(Window.StartPos.X.Scale, Window.StartPos.X.Offset + delta.X, 
                                          Window.StartPos.Y.Scale, Window.StartPos.Y.Offset + delta.Y)
        end
    end)
    
    self:Connection(UserInputService.InputEnded, function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            Window.Dragging = false
        end
    end)
    
    -- Store elements
    Window.Elements = {
        Main = Mainframe,
        TabHolder = TabHolder,
        ButtonHolder = ButtonHolder,
        TabNames = TabNames,
        LeftSection = LeftSection,
        RightSection = RightSection
    }
    
    function Window:CreatePage(Options)
        return Library:CreatePage(Window, Options)
    end
    
    return Window
end

function Library:CreatePage(Window, Options)
    Options = Options or {}
    
    local Page = {
        Name = Options.Name or "Page",
        Icon = Options.Icon or "rbxassetid://6031225831",
        Window = Window,
        Sections = {},
        Active = false
    }
    
    -- Create tab button
    local Button = Instance.new("Frame")
    Button.Name = "Button"
    Button.Parent = Window.Elements.ButtonHolder
    Button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Button.BackgroundTransparency = 1.000
    Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Button.BorderSizePixel = 0
    Button.Size = UDim2.new(0, 153, 0, 32)
    
    local ButtonName = Instance.new("TextButton")
    ButtonName.Name = "ButtonName"
    ButtonName.Parent = Button
    ButtonName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ButtonName.BackgroundTransparency = 1.000
    ButtonName.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ButtonName.BorderSizePixel = 0
    ButtonName.Size = UDim2.new(0, 152, 0, 30)
    ButtonName.Font = Enum.Font.Unknown
    ButtonName.Text = "             " .. Page.Name
    ButtonName.TextColor3 = Color3.fromRGB(255, 255, 255)
    ButtonName.TextSize = 16.000
    ButtonName.TextXAlignment = Enum.TextXAlignment.Left
    
    local Icon = Instance.new("ImageLabel")
    Icon.Name = "Icon"
    Icon.Parent = ButtonName
    Icon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Icon.BackgroundTransparency = 1.000
    Icon.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Icon.BorderSizePixel = 0
    Icon.Position = UDim2.new(0.08, 0, 0.2, 0)
    Icon.Size = UDim2.new(0, 17, 0, 17)
    Icon.Image = Page.Icon
    
    -- Create tab name in sidebar
    local TabName = Instance.new("TextLabel")
    TabName.Name = "TabName"
    TabName.Parent = Window.Elements.TabNames
    TabName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TabName.BackgroundTransparency = 1.000
    TabName.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TabName.BorderSizePixel = 0
    TabName.Position = UDim2.new(-0.01, 0, (#Window.Pages * 0.125) - 0.008, 0)
    TabName.Size = UDim2.new(0, 150, 0, 32)
    TabName.Font = Enum.Font.Unknown
    TabName.Text = Page.Name:upper()
    TabName.TextColor3 = Color3.fromRGB(158, 158, 158)
    TabName.TextSize = 11.000
    TabName.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Page content containers (initially hidden)
    local PageLeft = Instance.new("Frame")
    PageLeft.Name = "PageLeft"
    PageLeft.Parent = Window.Elements.LeftSection
    PageLeft.BackgroundTransparency = 1
    PageLeft.Size = UDim2.new(1, 0, 1, 0)
    PageLeft.Visible = false
    
    local PageLeftLayout = Instance.new("UIListLayout")
    PageLeftLayout.Parent = PageLeft
    PageLeftLayout.SortOrder = Enum.SortOrder.LayoutOrder
    PageLeftLayout.Padding = UDim.new(0, 10)
    
    local PageRight = Instance.new("Frame")
    PageRight.Name = "PageRight"
    PageRight.Parent = Window.Elements.RightSection
    PageRight.BackgroundTransparency = 1
    PageRight.Size = UDim2.new(1, 0, 1, 0)
    PageRight.Visible = false
    
    local PageRightLayout = Instance.new("UIListLayout")
    PageRightLayout.Parent = PageRight
    PageRightLayout.SortOrder = Enum.SortOrder.LayoutOrder
    PageRightLayout.Padding = UDim.new(0, 10)
    
    -- Click functionality
    self:Connection(ButtonName.MouseButton1Click, function()
        if not Page.Active then
            -- Hide all other pages
            for _, OtherPage in pairs(Window.Pages) do
                if OtherPage.Active then
                    OtherPage:SetActive(false)
                end
            end
            Page:SetActive(true)
        end
    end)
    
    -- Functions
    function Page:SetActive(State)
        Page.Active = State
        Page.Elements.PageLeft.Visible = State
        Page.Elements.PageRight.Visible = State
        
        if State then
            Library.CurrentPage = Page
        end
    end
    
    function Page:CreateSection(Options)
        return Library:CreateSection(Page, Options)
    end
    
    -- Store elements
    Page.Elements = {
        Button = Button,
        TabName = TabName,
        PageLeft = PageLeft,
        PageRight = PageRight
    }
    
    -- Add to pages and activate first one
    table.insert(Window.Pages, Page)
    if #Window.Pages == 1 then
        Page:SetActive(true)
    end
    
    return Page
end

function Library:CreateSection(Page, Options)
    Options = Options or {}
    
    local Section = {
        Name = Options.Name or "Section",
        Side = (Options.Side or "Left"):lower(),
        Page = Page,
        Elements = {}
    }
    
    local Parent = Section.Side == "left" and Page.Elements.PageLeft or Page.Elements.PageRight
    
    -- Create section container
    local SectionFrame = Instance.new("Frame")
    SectionFrame.Name = "Section"
    SectionFrame.Parent = Parent
    SectionFrame.BackgroundColor3 = Color3.fromRGB(53, 60, 70)
    SectionFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    SectionFrame.BorderSizePixel = 0
    SectionFrame.Size = UDim2.new(0, 270, 0, 62)
    SectionFrame.AutomaticSize = Enum.AutomaticSize.Y
    
    local SectionCorner = Instance.new("UICorner")
    SectionCorner.CornerRadius = UDim.new(0, 5)
    SectionCorner.Parent = SectionFrame
    
    -- Border line
    local BorderLine = Instance.new("Frame")
    BorderLine.Name = "BorderLine"
    BorderLine.Parent = SectionFrame
    BorderLine.BackgroundColor3 = Color3.fromRGB(71, 83, 98)
    BorderLine.BorderColor3 = Color3.fromRGB(0, 0, 0)
    BorderLine.BorderSizePixel = 0
    BorderLine.Position = UDim2.new(0.041, 0, 0.424, 0)
    BorderLine.Size = UDim2.new(0, 249, 0, 1)
    
    -- Section title
    local PageTitle = Instance.new("TextLabel")
    PageTitle.Name = "PageTitle"
    PageTitle.Parent = SectionFrame
    PageTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    PageTitle.BackgroundTransparency = 1.000
    PageTitle.BorderColor3 = Color3.fromRGB(0, 0, 0)
    PageTitle.BorderSizePixel = 0
    PageTitle.Size = UDim2.new(0, 270, 0, 28)
    PageTitle.Font = Enum.Font.Unknown
    PageTitle.Text = "   " .. Section.Name
    PageTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
    PageTitle.TextSize = 17.000
    PageTitle.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Feature holder
    local FeatureHolder = Instance.new("Frame")
    FeatureHolder.Name = "FeatureHolder"
    FeatureHolder.Parent = SectionFrame
    FeatureHolder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    FeatureHolder.BackgroundTransparency = 1.000
    FeatureHolder.BorderColor3 = Color3.fromRGB(0, 0, 0)
    FeatureHolder.BorderSizePixel = 0
    FeatureHolder.Position = UDim2.new(0, 0, 0.529, 0)
    FeatureHolder.Size = UDim2.new(0, 270, 0, 34)
    FeatureHolder.AutomaticSize = Enum.AutomaticSize.Y
    
    local FeatureLayout = Instance.new("UIListLayout")
    FeatureLayout.Parent = FeatureHolder
    FeatureLayout.SortOrder = Enum.SortOrder.LayoutOrder
    
    local FeaturePadding = Instance.new("UIPadding")
    FeaturePadding.Parent = FeatureHolder
    FeaturePadding.PaddingBottom = UDim.new(0, 5)
    
    -- Shadow
    local Shadow = Instance.new("Frame")
    Shadow.Name = "Shadow"
    Shadow.Parent = SectionFrame
    Shadow.BackgroundColor3 = Color3.fromRGB(27, 31, 36)
    Shadow.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Shadow.BorderSizePixel = 0
    Shadow.Position = UDim2.new(0, 0, 0.99, 0)
    Shadow.Size = UDim2.new(0, 270, 0, 1)
    Shadow.ZIndex = 0
    
    local ShadowCorner = Instance.new("UICorner")
    ShadowCorner.CornerRadius = UDim.new(0, 5)
    ShadowCorner.Parent = Shadow
    
    -- Store elements
    Section.Elements = {
        Frame = SectionFrame,
        FeatureHolder = FeatureHolder
    }
    
    -- Element creation functions
    function Section:CreateToggle(Options)
        return Library:CreateToggle(Section, Options)
    end
    
    function Section:CreateSlider(Options)
        return Library:CreateSlider(Section, Options)
    end
    
    function Section:CreateDropdown(Options)
        return Library:CreateDropdown(Section, Options)
    end
    
    function Section:CreateColorpicker(Options)
        return Library:CreateColorpicker(Section, Options)
    end
    
    function Section:CreateKeybind(Options)
        return Library:CreateKeybind(Section, Options)
    end
    
    function Section:CreateButton(Options)
        return Library:CreateButton(Section, Options)
    end
    
    function Section:CreateTextbox(Options)
        return Library:CreateTextbox(Section, Options)
    end
    
    table.insert(Page.Sections, Section)
    return Section
end

function Library:CreateToggle(Section, Options)
    Options = Options or {}
    
    local Toggle = {
        Name = Options.Name or "Toggle",
        Default = Options.Default or false,
        Callback = Options.Callback or function() end,
        Flag = Options.Flag or tostring(math.random(1, 1000000)),
        Value = Options.Default or false
    }
    
    -- Create toggle button
    local ToggleButton = Instance.new("Frame")
    ToggleButton.Name = "ToggleButton"
    ToggleButton.Parent = Section.Elements.FeatureHolder
    ToggleButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ToggleButton.BackgroundTransparency = 1.000
    ToggleButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ToggleButton.BorderSizePixel = 0
    ToggleButton.Size = UDim2.new(0, 270, 0, 29)
    
    local ToggleName = Instance.new("TextLabel")
    ToggleName.Name = "ToggleName"
    ToggleName.Parent = ToggleButton
    ToggleName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ToggleName.BackgroundTransparency = 1.000
    ToggleName.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ToggleName.BorderSizePixel = 0
    ToggleName.Position = UDim2.new(0, 0, -0.083, 0)
    ToggleName.Size = UDim2.new(0, 150, 0, 26)
    ToggleName.Font = Enum.Font.Unknown
    ToggleName.Text = "   " .. Toggle.Name
    ToggleName.TextColor3 = Color3.fromRGB(249, 249, 249)
    ToggleName.TextSize = 17.000
    ToggleName.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Toggle switch
    local ToggleFrame = Instance.new("Frame")
    ToggleFrame.Name = "Toggle"
    ToggleFrame.Parent = ToggleButton
    ToggleFrame.BackgroundColor3 = Color3.fromRGB(122, 122, 122)
    ToggleFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ToggleFrame.BorderSizePixel = 0
    ToggleFrame.Position = UDim2.new(0.815, 0, 0.069, 0)
    ToggleFrame.Size = UDim2.new(0, 40, 0, 21)
    
    local ToggleCorner = Instance.new("UICorner")
    ToggleCorner.CornerRadius = UDim.new(0, 10)
    ToggleCorner.Parent = ToggleFrame
    
    local ToggleHead = Instance.new("Frame")
    ToggleHead.Name = "ToggleHead"
    ToggleHead.Parent = ToggleFrame
    ToggleHead.BackgroundColor3 = Color3.fromRGB(197, 197, 197)
    ToggleHead.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ToggleHead.BorderSizePixel = 0
    ToggleHead.Position = UDim2.new(0.1, 0, 0.19, 0)
    ToggleHead.Size = UDim2.new(0, 13, 0, 13)
    
    local HeadCorner = Instance.new("UICorner")
    HeadCorner.CornerRadius = UDim.new(1, 0)
    HeadCorner.Parent = ToggleHead
    
    -- Colorpicker bind (optional)
    local ColorpickerBind = Instance.new("TextButton")
    ColorpickerBind.Name = "ColorpickerBind"
    ColorpickerBind.Parent = ToggleButton
    ColorpickerBind.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ColorpickerBind.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ColorpickerBind.BorderSizePixel = 0
    ColorpickerBind.Position = UDim2.new(0.715, 0, 0.138, 0)
    ColorpickerBind.Size = UDim2.new(0, 17, 0, 17)
    ColorpickerBind.Font = Enum.Font.SourceSans
    ColorpickerBind.Text = ""
    ColorpickerBind.TextColor3 = Color3.fromRGB(0, 0, 0)
    ColorpickerBind.TextSize = 14.000
    ColorpickerBind.Visible = Options.Colorpicker or false
    
    local ColorCorner = Instance.new("UICorner")
    ColorCorner.CornerRadius = UDim.new(1, 0)
    ColorCorner.Parent = ColorpickerBind
    
    -- Click detector
    local ClickDetector = Instance.new("TextButton")
    ClickDetector.Parent = ToggleButton
    ClickDetector.BackgroundTransparency = 1
    ClickDetector.Size = UDim2.new(1, 0, 1, 0)
    ClickDetector.Text = ""
    
    -- Functions
    function Toggle:Set(Value)
        Toggle.Value = Value
        Library.Flags[Toggle.Flag] = Value
        
        if Value then
            self:Tween(ToggleFrame, {BackgroundColor3 = Color3.fromRGB(67, 111, 194)}, 0.25)
            self:Tween(ToggleHead, {
                BackgroundColor3 = Library.Accent,
                Position = UDim2.new(0.5, 3, 0.143, 0),
                Size = UDim2.new(0, 15, 0, 15)
            }, 0.25)
        else
            self:Tween(ToggleFrame, {BackgroundColor3 = Color3.fromRGB(122, 122, 122)}, 0.25)
            self:Tween(ToggleHead, {
                BackgroundColor3 = Color3.fromRGB(197, 197, 197),
                Position = UDim2.new(0.1, 0, 0.19, 0),
                Size = UDim2.new(0, 13, 0, 13)
            }, 0.25)
        end
        
        Toggle.Callback(Value)
    end
    
    -- Click event
    self:Connection(ClickDetector.MouseButton1Click, function()
        Toggle:Set(not Toggle.Value)
    end)
    
    -- Initialize
    Toggle:Set(Toggle.Default)
    
    return Toggle
end

function Library:CreateSlider(Section, Options)
    Options = Options or {}
    
    local Slider = {
        Name = Options.Name or "Slider",
        Min = Options.Min or 0,
        Max = Options.Max or 100,
        Default = Options.Default or 0,
        Suffix = Options.Suffix or "%",
        Callback = Options.Callback or function() end,
        Flag = Options.Flag or tostring(math.random(1, 1000000)),
        Value = Options.Default or 0,
        Dragging = false
    }
    
    -- Create slider
    local SliderFrame = Instance.new("Frame")
    SliderFrame.Name = "Slider"
    SliderFrame.Parent = Section.Elements.FeatureHolder
    SliderFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    SliderFrame.BackgroundTransparency = 1.000
    SliderFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    SliderFrame.BorderSizePixel = 0
    SliderFrame.Size = UDim2.new(0, 270, 0, 29)
    
    local SliderName = Instance.new("TextLabel")
    SliderName.Name = "SliderName"
    SliderName.Parent = SliderFrame
    SliderName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    SliderName.BackgroundTransparency = 1.000
    SliderName.BorderColor3 = Color3.fromRGB(0, 0, 0)
    SliderName.BorderSizePixel = 0
    SliderName.Position = UDim2.new(0, 0, -0.048, 0)
    SliderName.Size = UDim2.new(0, 150, 0, 26)
    SliderName.Font = Enum.Font.Unknown
    SliderName.Text = "   " .. Slider.Name
    SliderName.TextColor3 = Color3.fromRGB(249, 249, 249)
    SliderName.TextSize = 17.000
    SliderName.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Slider background
    local SliderBackground = Instance.new("Frame")
    SliderBackground.Name = "SliderBackground"
    SliderBackground.Parent = SliderFrame
    SliderBackground.BackgroundColor3 = Color3.fromRGB(67, 111, 194)
    SliderBackground.BackgroundTransparency = 0.600
    SliderBackground.BorderColor3 = Color3.fromRGB(0, 0, 0)
    SliderBackground.BorderSizePixel = 0
    SliderBackground.Position = UDim2.new(0.422, 0, 0.231, 3)
    SliderBackground.Size = UDim2.new(0, 108, 0, 3)
    
    -- Slider fill
    local SliderFill = Instance.new("Frame")
    SliderFill.Name = "SliderFill"
    SliderFill.Parent = SliderBackground
    SliderFill.BackgroundColor3 = Library.Accent
    SliderFill.BorderColor3 = Color3.fromRGB(0, 0, 0)
    SliderFill.BorderSizePixel = 0
    SliderFill.Position = UDim2.new(-0.019, 0, 0, 0)
    SliderFill.Size = UDim2.new(0, 43, 0, 3)
    
    -- Slider head
    local SliderHead = Instance.new("Frame")
    SliderHead.Name = "SliderHead"
    SliderHead.Parent = SliderFill
    SliderHead.BackgroundColor3 = Library.Accent
    SliderHead.BorderColor3 = Color3.fromRGB(0, 0, 0)
    SliderHead.BorderSizePixel = 0
    SliderHead.Position = UDim2.new(0.814, 0, -2, 0)
    SliderHead.Size = UDim2.new(0, 15, 0, 15)
    
    local HeadCorner = Instance.new("UICorner")
    HeadCorner.CornerRadius = UDim.new(1, 0)
    HeadCorner.Parent = SliderHead
    
    -- Value display
    local Value = Instance.new("TextBox")
    Value.Name = "Value"
    Value.Parent = SliderFrame
    Value.BackgroundColor3 = Color3.fromRGB(71, 83, 99)
    Value.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Value.BorderSizePixel = 0
    Value.Position = UDim2.new(0.852, 0, 0.055, 0)
    Value.Size = UDim2.new(0, 30, 0, 20)
    Value.Font = Enum.Font.Unknown
    Value.PlaceholderColor3 = Color3.fromRGB(189, 189, 189)
    Value.PlaceholderText = "0" .. Slider.Suffix
    Value.Text = ""
    Value.TextColor3 = Color3.fromRGB(254, 254, 254)
    Value.TextSize = 16.000
    
    -- Functions
    function Slider:Set(NewValue)
        NewValue = math.clamp(NewValue, Slider.Min, Slider.Max)
        Slider.Value = NewValue
        Library.Flags[Slider.Flag] = NewValue
        
        local Percentage = (NewValue - Slider.Min) / (Slider.Max - Slider.Min)
        
        self:Tween(SliderFill, {Size = UDim2.new(Percentage, 0, 1, 0)}, 0.1)
        self:Tween(SliderHead, {Position = UDim2.new(Percentage, -7, -2, 0)}, 0.1)
        
        Value.Text = tostring(NewValue) .. Slider.Suffix
        Slider.Callback(NewValue)
    end
    
    -- Dragging
    local function UpdateSlider()
        if Slider.Dragging then
            local MousePos = UserInputService:GetMouseLocation().X
            local SliderPos = SliderBackground.AbsolutePosition.X
            local SliderSize = SliderBackground.AbsoluteSize.X
            local Percentage = math.clamp((MousePos - SliderPos) / SliderSize, 0, 1)
            local NewValue = math.floor(Slider.Min + (Slider.Max - Slider.Min) * Percentage)
            Slider:Set(NewValue)
        end
    end
    
    self:Connection(SliderBackground.InputBegan, function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            Slider.Dragging = true
            UpdateSlider()
        end
    end)
    
    self:Connection(UserInputService.InputEnded, function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            Slider.Dragging = false
        end
    end)
    
    self:Connection(UserInputService.InputChanged, function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            UpdateSlider()
        end
    end)
    
    -- Value input
    self:Connection(Value.FocusLost, function()
        local NewValue = tonumber(Value.Text:gsub(Slider.Suffix, ""))
        if NewValue then
            Slider:Set(NewValue)
        end
    end)
    
    -- Initialize
    Slider:Set(Slider.Default)
    
    return Slider
end

function Library:CreateDropdown(Section, Options)
    Options = Options or {}
    
    local Dropdown = {
        Name = Options.Name or "Dropdown",
        Options = Options.Options or {"Option 1", "Option 2"},
        Default = Options.Default or "Select",
        Callback = Options.Callback or function() end,
        Flag = Options.Flag or tostring(math.random(1, 1000000)),
        Value = Options.Default or "Select",
        Open = false
    }
    
    -- Create dropdown
    local DropdownFrame = Instance.new("Frame")
    DropdownFrame.Name = "Dropdown"
    DropdownFrame.Parent = Section.Elements.FeatureHolder
    DropdownFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    DropdownFrame.BackgroundTransparency = 1.000
    DropdownFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    DropdownFrame.BorderSizePixel = 0
    DropdownFrame.Size = UDim2.new(0, 270, 0, 29)
    
    local DropdownName = Instance.new("TextLabel")
    DropdownName.Name = "DropdownName"
    DropdownName.Parent = DropdownFrame
    DropdownName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    DropdownName.BackgroundTransparency = 1.000
    DropdownName.BorderColor3 = Color3.fromRGB(0, 0, 0)
    DropdownName.BorderSizePixel = 0
    DropdownName.Position = UDim2.new(0, 0, -0.048, 0)
    DropdownName.Size = UDim2.new(0, 150, 0, 26)
    DropdownName.Font = Enum.Font.Unknown
    DropdownName.Text = "   " .. Dropdown.Name
    DropdownName.TextColor3 = Color3.fromRGB(249, 249, 249)
    DropdownName.TextSize = 17.000
    DropdownName.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Dropdown button
    local DropdownButton = Instance.new("Frame")
    DropdownButton.Name = "DropdownButton"
    DropdownButton.Parent = DropdownFrame
    DropdownButton.BackgroundColor3 = Color3.fromRGB(71, 83, 99)
    DropdownButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
    DropdownButton.BorderSizePixel = 0
    DropdownButton.Position = UDim2.new(0.556, 0, -0.007, 0)
    DropdownButton.Size = UDim2.new(0, 114, 0, 24)
    
    local ButtonCorner = Instance.new("UICorner")
    ButtonCorner.CornerRadius = UDim.new(0, 3)
    ButtonCorner.Parent = DropdownButton
    
    local AppliedOption = Instance.new("TextLabel")
    AppliedOption.Name = "AppliedOption"
    AppliedOption.Parent = DropdownButton
    AppliedOption.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    AppliedOption.BackgroundTransparency = 1.000
    AppliedOption.BorderColor3 = Color3.fromRGB(0, 0, 0)
    AppliedOption.BorderSizePixel = 0
    AppliedOption.Size = UDim2.new(0, 114, 0, 24)
    AppliedOption.Font = Enum.Font.Unknown
    AppliedOption.Text = "  " .. Dropdown.Value
    AppliedOption.TextColor3 = Color3.fromRGB(253, 253, 253)
    AppliedOption.TextSize = 16.000
    AppliedOption.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Options container
    local OpenStorage = Instance.new("Frame")
    OpenStorage.Name = "OpenStorage"
    OpenStorage.Parent = DropdownButton
    OpenStorage.BackgroundColor3 = Color3.fromRGB(60, 71, 84)
    OpenStorage.BorderColor3 = Color3.fromRGB(0, 0, 0)
    OpenStorage.BorderSizePixel = 0
    OpenStorage.Position = UDim2.new(0, 0, 1, 0)
    OpenStorage.Size = UDim2.new(0, 114, 0, #Dropdown.Options * 22)
    OpenStorage.Visible = false
    OpenStorage.ZIndex = 10
    
    local StorageCorner = Instance.new("UICorner")
    StorageCorner.CornerRadius = UDim.new(0, 4)
    StorageCorner.Parent = OpenStorage
    
    local OptionsHolder = Instance.new("Frame")
    OptionsHolder.Name = "OptionsHolder"
    OptionsHolder.Parent = OpenStorage
    OptionsHolder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    OptionsHolder.BackgroundTransparency = 1.000
    OptionsHolder.BorderColor3 = Color3.fromRGB(0, 0, 0)
    OptionsHolder.BorderSizePixel = 0
    OptionsHolder.Position = UDim2.new(0.053, 0, 0.054, 0)
    OptionsHolder.Size = UDim2.new(0, 102, 0, #Dropdown.Options * 22)
    
    local OptionsLayout = Instance.new("UIListLayout")
    OptionsLayout.Parent = OptionsHolder
    OptionsLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    OptionsLayout.SortOrder = Enum.SortOrder.LayoutOrder
    OptionsLayout.Padding = UDim.new(0, 3)
    
    -- Create options
    for i, OptionText in ipairs(Dropdown.Options) do
        local Option = Instance.new("Frame")
        Option.Name = "Option" .. i
        Option.Parent = OptionsHolder
        Option.BackgroundColor3 = Color3.fromRGB(71, 83, 99)
        Option.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Option.BorderSizePixel = 0
        Option.Size = UDim2.new(0, 108, 0, 19)
        
        local OptionCorner = Instance.new("UICorner")
        OptionCorner.CornerRadius = UDim.new(0, 3)
        OptionCorner.Parent = Option
        
        local OptionName = Instance.new("TextLabel")
        OptionName.Name = "OptionName"
        OptionName.Parent = Option
        OptionName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        OptionName.BackgroundTransparency = 1.000
        OptionName.BorderColor3 = Color3.fromRGB(0, 0, 0)
        OptionName.BorderSizePixel = 0
        OptionName.Position = UDim2.new(-0.01, 0, 0, 0)
        OptionName.Size = UDim2.new(0, 104, 0, 19)
        OptionName.Font = Enum.Font.Unknown
        OptionName.Text = "  " .. OptionText
        OptionName.TextColor3 = Color3.fromRGB(255, 255, 255)
        OptionName.TextSize = 15.000
        OptionName.TextXAlignment = Enum.TextXAlignment.Left
        
        local OptionButton = Instance.new("TextButton")
        OptionButton.Parent = Option
        OptionButton.BackgroundTransparency = 1
        OptionButton.Size = UDim2.new(1, 0, 1, 0)
        OptionButton.Text = ""
        
        self:Connection(OptionButton.MouseButton1Click, function()
            Dropdown:Set(OptionText)
            Dropdown:Close()
        end)
    end
    
    -- Click detector for main button
    local ClickDetector = Instance.new("TextButton")
    ClickDetector.Parent = DropdownButton
    ClickDetector.BackgroundTransparency = 1
    ClickDetector.Size = UDim2.new(1, 0, 1, 0)
    ClickDetector.Text = ""
    
    -- Functions
    function Dropdown:Set(Value)
        Dropdown.Value = Value
        Library.Flags[Dropdown.Flag] = Value
        AppliedOption.Text = "  " .. Value
        Dropdown.Callback(Value)
    end
    
    function Dropdown:Open()
        Dropdown.Open = true
        OpenStorage.Visible = true
    end
    
    function Dropdown:Close()
        Dropdown.Open = false
        OpenStorage.Visible = false
    end
    
    function Dropdown:Toggle()
        if Dropdown.Open then
            Dropdown:Close()
        else
            Dropdown:Open()
        end
    end
    
    -- Click events
    self:Connection(ClickDetector.MouseButton1Click, function()
        Dropdown:Toggle()
    end)
    
    -- Close when clicking outside
    self:Connection(UserInputService.InputBegan, function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 and Dropdown.Open then
            if not self:IsMouseOver(OpenStorage) and not self:IsMouseOver(DropdownButton) then
                Dropdown:Close()
            end
        end
    end)
    
    -- Initialize
    Dropdown:Set(Dropdown.Default)
    
    return Dropdown
end

function Library:CreateColorpicker(Section, Options)
    Options = Options or {}
    
    local Colorpicker = {
        Name = Options.Name or "Colorpicker",
        Default = Options.Default or Color3.fromRGB(255, 0, 0),
        Callback = Options.Callback or function() end,
        Flag = Options.Flag or tostring(math.random(1, 1000000)),
        Value = Options.Default or Color3.fromRGB(255, 0, 0),
        Open = false
    }
    
    -- Create colorpicker frame
    local ColorpickerFrame = Instance.new("Frame")
    ColorpickerFrame.Name = "ColorpickerFrame"
    ColorpickerFrame.Parent = Section.Elements.FeatureHolder
    ColorpickerFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ColorpickerFrame.BackgroundTransparency = 1.000
    ColorpickerFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ColorpickerFrame.BorderSizePixel = 0
    ColorpickerFrame.Size = UDim2.new(0, 270, 0, 29)
    
    local ColorpickerName = Instance.new("TextLabel")
    ColorpickerName.Name = "ColorpickerName"
    ColorpickerName.Parent = ColorpickerFrame
    ColorpickerName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ColorpickerName.BackgroundTransparency = 1.000
    ColorpickerName.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ColorpickerName.BorderSizePixel = 0
    ColorpickerName.Position = UDim2.new(0, 0, -0.048, 0)
    ColorpickerName.Size = UDim2.new(0, 150, 0, 26)
    ColorpickerName.Font = Enum.Font.Unknown
    ColorpickerName.Text = "   " .. Colorpicker.Name
    ColorpickerName.TextColor3 = Color3.fromRGB(249, 249, 249)
    ColorpickerName.TextSize = 17.000
    ColorpickerName.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Color display button
    local ColorButton = Instance.new("TextButton")
    ColorButton.Name = "ColorButton"
    ColorButton.Parent = ColorpickerFrame
    ColorButton.BackgroundColor3 = Colorpicker.Default
    ColorButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ColorButton.BorderSizePixel = 0
    ColorButton.Position = UDim2.new(0.815, 0, 0.138, 0)
    ColorButton.Size = UDim2.new(0, 40, 0, 17)
    ColorButton.Text = ""
    
    local ColorCorner = Instance.new("UICorner")
    ColorCorner.CornerRadius = UDim.new(0, 3)
    ColorCorner.Parent = ColorButton
    
    -- Colorpicker window
    local ColorWindow = Instance.new("Frame")
    ColorWindow.Name = "ColorWindow"
    ColorWindow.Parent = Library.ScreenGUI
    ColorWindow.BackgroundColor3 = Color3.fromRGB(36, 42, 50)
    ColorWindow.BackgroundTransparency = 0.100
    ColorWindow.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ColorWindow.BorderSizePixel = 0
    ColorWindow.Position = UDim2.new(0, 0, 0, 0)
    ColorWindow.Size = UDim2.new(0, 290, 0, 340)
    ColorWindow.Visible = false
    ColorWindow.ZIndex = 100
    
    local WindowCorner = Instance.new("UICorner")
    WindowCorner.CornerRadius = UDim.new(0, 4)
    WindowCorner.Parent = ColorWindow
    
    local WindowTitle = Instance.new("TextLabel")
    WindowTitle.Name = "WindowTitle"
    WindowTitle.Parent = ColorWindow
    WindowTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    WindowTitle.BackgroundTransparency = 1.000
    WindowTitle.BorderColor3 = Color3.fromRGB(0, 0, 0)
    WindowTitle.BorderSizePixel = 0
    WindowTitle.Position = UDim2.new(0.028, 0, 0.018, 0)
    WindowTitle.Size = UDim2.new(0, 237, 0, 23)
    WindowTitle.Font = Enum.Font.Unknown
    WindowTitle.Text = Colorpicker.Name
    WindowTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
    WindowTitle.TextSize = 17.000
    WindowTitle.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Color picker area
    local ColorPicker = Instance.new("Frame")
    ColorPicker.Name = "ColorPicker"
    ColorPicker.Parent = ColorWindow
    ColorPicker.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ColorPicker.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ColorPicker.BorderSizePixel = 0
    ColorPicker.Position = UDim2.new(0.028, 0, 0.106, 0)
    ColorPicker.Size = UDim2.new(0, 239, 0, 237)
    
    local PickerCorner = Instance.new("UICorner")
    PickerCorner.CornerRadius = UDim.new(0, 4)
    PickerCorner.Parent = ColorPicker
    
    local Hue = Instance.new("ImageLabel")
    Hue.Name = "Hue"
    Hue.Parent = ColorPicker
    Hue.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Hue.BackgroundTransparency = 1.000
    Hue.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Hue.BorderSizePixel = 0
    Hue.Position = UDim2.new(-0.002, 0, 0.0002, 0)
    Hue.Size = UDim2.new(0, 239, 0, 236)
    Hue.Image = "rbxassetid://6976876787"
    Hue.ImageColor3 = Color3.fromRGB(255, 1, 1)
    
    local HueCorner = Instance.new("UICorner")
    HueCorner.CornerRadius = UDim.new(0, 3)
    HueCorner.Parent = Hue
    
    local Hue2 = Instance.new("ImageLabel")
    Hue2.Name = "Hue2"
    Hue2.Parent = ColorPicker
    Hue2.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    Hue2.BackgroundTransparency = 1.000
    Hue2.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Hue2.BorderSizePixel = 0
    Hue2.Position = UDim2.new(-0.002, 0, 0.0002, 0)
    Hue2.Size = UDim2.new(0, 239, 0, 236)
    Hue2.ZIndex = 2
    Hue2.Image = "rbxassetid://6941137543"
    Hue2.ImageColor3 = Color3.fromRGB(0, 0, 0)
    
    local Hue2Corner = Instance.new("UICorner")
    Hue2Corner.CornerRadius = UDim.new(0, 3)
    Hue2Corner.Parent = Hue2
    
    -- Color slider
    local ColorSlider = Instance.new("Frame")
    ColorSlider.Name = "ColorSlider"
    ColorSlider.Parent = ColorWindow
    ColorSlider.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ColorSlider.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ColorSlider.BorderSizePixel = 0
    ColorSlider.Position = UDim2.new(0.879, 0, 0.106, 0)
    ColorSlider.Size = UDim2.new(0, 29, 0, 236)
    
    local SliderCorner = Instance.new("UICorner")
    SliderCorner.CornerRadius = UDim.new(0, 3)
    SliderCorner.Parent = ColorSlider
    
    -- Hex input
    local HexBox = Instance.new("TextBox")
    HexBox.Name = "HexBox"
    HexBox.Parent = ColorWindow
    HexBox.BackgroundColor3 = Color3.fromRGB(60, 71, 84)
    HexBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
    HexBox.BorderSizePixel = 0
    HexBox.Position = UDim2.new(0.028, 0, 0.816, 0)
    HexBox.Size = UDim2.new(0, 276, 0, 23)
    HexBox.Font = Enum.Font.Unknown
    HexBox.PlaceholderText = "FF0000"
    HexBox.Text = ""
    HexBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    HexBox.TextSize = 15.000
    HexBox.TextXAlignment = Enum.TextXAlignment.Left
    
    local HexCorner = Instance.new("UICorner")
    HexCorner.CornerRadius = UDim.new(0, 3)
    HexCorner.Parent = HexBox
    
    -- Copy/Paste buttons
    local CopyButton = Instance.new("TextButton")
    CopyButton.Name = "CopyButton"
    CopyButton.Parent = ColorWindow
    CopyButton.BackgroundColor3 = Library.Accent
    CopyButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
    CopyButton.BorderSizePixel = 0
    CopyButton.Position = UDim2.new(0.028, 0, 0.9, 0)
    CopyButton.Size = UDim2.new(0, 130, 0, 23)
    CopyButton.Font = Enum.Font.Unknown
    CopyButton.Text = "Copy"
    CopyButton.TextColor3 = Color3.fromRGB(0, 0, 0)
    CopyButton.TextSize = 15.000
    
    local CopyCorner = Instance.new("UICorner")
    CopyCorner.CornerRadius = UDim.new(0, 3)
    CopyCorner.Parent = CopyButton
    
    local PasteButton = Instance.new("TextButton")
    PasteButton.Name = "PasteButton"
    PasteButton.Parent = ColorWindow
    PasteButton.BackgroundColor3 = Library.Accent
    PasteButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
    PasteButton.BorderSizePixel = 0
    PasteButton.Position = UDim2.new(0.531, 0, 0.9, 0)
    PasteButton.Size = UDim2.new(0, 130, 0, 23)
    PasteButton.Font = Enum.Font.Unknown
    PasteButton.Text = "Paste"
    PasteButton.TextColor3 = Color3.fromRGB(0, 0, 0)
    PasteButton.TextSize = 15.000
    PasteButton.TextWrapped = true
    
    local PasteCorner = Instance.new("UICorner")
    PasteCorner.CornerRadius = UDim.new(0, 3)
    PasteCorner.Parent = PasteButton
    
    -- Functions
    function Colorpicker:Set(Color)
        Colorpicker.Value = Color
        Library.Flags[Colorpicker.Flag] = Color
        ColorButton.BackgroundColor3 = Color
        
        local r, g, b = math.floor(Color.R * 255), math.floor(Color.G * 255), math.floor(Color.B * 255)
        HexBox.Text = string.format("%02X%02X%02X", r, g, b)
        
        Colorpicker.Callback(Color)
    end
    
    function Colorpicker:Open()
        Colorpicker.Open = true
        ColorWindow.Visible = true
        ColorWindow.Position = UDim2.new(0, ColorButton.AbsolutePosition.X + 50, 0, ColorButton.AbsolutePosition.Y - 50)
    end
    
    function Colorpicker:Close()
        Colorpicker.Open = false
        ColorWindow.Visible = false
    end
    
    -- Events
    self:Connection(ColorButton.MouseButton1Click, function()
        if Colorpicker.Open then
            Colorpicker:Close()
        else
            Colorpicker:Open()
        end
    end)
    
    self:Connection(UserInputService.InputBegan, function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 and Colorpicker.Open then
            if not self:IsMouseOver(ColorWindow) and not self:IsMouseOver(ColorButton) then
                Colorpicker:Close()
            end
        end
    end)
    
    self:Connection(HexBox.FocusLost, function()
        local hex = HexBox.Text
        if #hex == 6 then
            local r = tonumber("0x" .. hex:sub(1, 2)) or 255
            local g = tonumber("0x" .. hex:sub(3, 4)) or 255
            local b = tonumber("0x" .. hex:sub(5, 6)) or 255
            Colorpicker:Set(Color3.fromRGB(r, g, b))
        end
    end)
    
    -- Initialize
    Colorpicker:Set(Colorpicker.Default)
    
    return Colorpicker
end

function Library:CreateKeybind(Section, Options)
    Options = Options or {}
    
    local Keybind = {
        Name = Options.Name or "Keybind",
        Default = Options.Default or Enum.KeyCode.E,
        Callback = Options.Callback or function() end,
        Flag = Options.Flag or tostring(math.random(1, 1000000)),
        Value = Options.Default or Enum.KeyCode.E,
        Binding = false
    }
    
    -- Create keybind frame
    local KeybindFrame = Instance.new("Frame")
    KeybindFrame.Name = "KeybindFrame"
    KeybindFrame.Parent = Section.Elements.FeatureHolder
    KeybindFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    KeybindFrame.BackgroundTransparency = 1.000
    KeybindFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    KeybindFrame.BorderSizePixel = 0
    KeybindFrame.Size = UDim2.new(0, 270, 0, 29)
    
    local KeybindName = Instance.new("TextLabel")
    KeybindName.Name = "KeybindName"
    KeybindName.Parent = KeybindFrame
    KeybindName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    KeybindName.BackgroundTransparency = 1.000
    KeybindName.BorderColor3 = Color3.fromRGB(0, 0, 0)
    KeybindName.BorderSizePixel = 0
    KeybindName.Position = UDim2.new(0, 0, -0.048, 0)
    KeybindName.Size = UDim2.new(0, 150, 0, 26)
    KeybindName.Font = Enum.Font.Unknown
    KeybindName.Text = "   " .. Keybind.Name
    KeybindName.TextColor3 = Color3.fromRGB(249, 249, 249)
    KeybindName.TextSize = 17.000
    KeybindName.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Keybind input box
    local KeybindBind = Instance.new("TextBox")
    KeybindBind.Name = "KeybindBind"
    KeybindBind.Parent = KeybindFrame
    KeybindBind.BackgroundColor3 = Color3.fromRGB(71, 83, 99)
    KeybindBind.BorderColor3 = Color3.fromRGB(0, 0, 0)
    KeybindBind.BorderSizePixel = 0
    KeybindBind.Position = UDim2.new(0.63, 0, 0.138, 0)
    KeybindBind.Size = UDim2.new(0, 40, 0, 17)
    KeybindBind.Font = Enum.Font.Unknown
    KeybindBind.PlaceholderColor3 = Color3.fromRGB(178, 178, 178)
    KeybindBind.Text = ""
    KeybindBind.TextColor3 = Color3.fromRGB(255, 255, 255)
    KeybindBind.TextSize = 15.000
    KeybindBind.TextEditable = false
    
    local BindCorner = Instance.new("UICorner")
    BindCorner.CornerRadius = UDim.new(0, 3)
    BindCorner.Parent = KeybindBind
    
    -- Key names table
    local KeyNames = {
        [Enum.KeyCode.LeftShift] = "LShift",
        [Enum.KeyCode.RightShift] = "RShift",
        [Enum.KeyCode.LeftControl] = "LCtrl",
        [Enum.KeyCode.RightControl] = "RCtrl",
        [Enum.KeyCode.LeftAlt] = "LAlt",
        [Enum.KeyCode.RightAlt] = "RAlt",
        [Enum.KeyCode.CapsLock] = "Caps",
        [Enum.KeyCode.One] = "1",
        [Enum.KeyCode.Two] = "2",
        [Enum.KeyCode.Three] = "3",
        [Enum.KeyCode.Four] = "4",
        [Enum.KeyCode.Five] = "5",
        [Enum.KeyCode.Six] = "6",
        [Enum.KeyCode.Seven] = "7",
        [Enum.KeyCode.Eight] = "8",
        [Enum.KeyCode.Nine] = "9",
        [Enum.KeyCode.Zero] = "0",
        [Enum.KeyCode.Space] = "Space",
        [Enum.KeyCode.Return] = "Enter"
    }
    
    -- Functions
    function Keybind:Set(Key)
        Keybind.Value = Key
        Library.Flags[Keybind.Flag] = Key
        
        local KeyName = KeyNames[Key] or tostring(Key):gsub("Enum.KeyCode.", "")
        KeybindBind.Text = KeyName
        
        Keybind.Callback(Key)
    end
    
    -- Events
    self:Connection(KeybindBind.Focused, function()
        Keybind.Binding = true
        KeybindBind.Text = "..."
    end)
    
    self:Connection(UserInputService.InputBegan, function(input, gameProcessed)
        if Keybind.Binding and input.UserInputType == Enum.UserInputType.Keyboard then
            if input.KeyCode == Enum.KeyCode.Backspace then
                Keybind:Set(nil)
                KeybindBind.Text = "None"
            else
                Keybind:Set(input.KeyCode)
            end
            
            Keybind.Binding = false
            KeybindBind:ReleaseFocus()
        elseif not gameProcessed and input.KeyCode == Keybind.Value and Keybind.Value then
            Keybind.Callback(true) -- Key pressed
        end
    end)
    
    -- Initialize
    Keybind:Set(Keybind.Default)
    
    return Keybind
end

function Library:CreateButton(Section, Options)
    Options = Options or {}
    
    local Button = {
        Name = Options.Name or "Button",
        Callback = Options.Callback or function() end
    }
    
    -- Create button frame
    local ButtonFrame = Instance.new("Frame")
    ButtonFrame.Name = "ButtonFrame"
    ButtonFrame.Parent = Section.Elements.FeatureHolder
    ButtonFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ButtonFrame.BackgroundTransparency = 1.000
    ButtonFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ButtonFrame.BorderSizePixel = 0
    ButtonFrame.Size = UDim2.new(0, 270, 0, 32)
    
    -- Button
    local ButtonElement = Instance.new("TextButton")
    ButtonElement.Name = "ButtonElement"
    ButtonElement.Parent = ButtonFrame
    ButtonElement.BackgroundColor3 = Color3.fromRGB(71, 83, 99)
    ButtonElement.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ButtonElement.BorderSizePixel = 0
    ButtonElement.Position = UDim2.new(0.037, 0, 0.125, 0)
    ButtonElement.Size = UDim2.new(0, 249, 0, 24)
    ButtonElement.Font = Enum.Font.Unknown
    ButtonElement.Text = Button.Name
    ButtonElement.TextColor3 = Color3.fromRGB(255, 255, 255)
    ButtonElement.TextSize = 16.000
    
    local ButtonCorner = Instance.new("UICorner")
    ButtonCorner.CornerRadius = UDim.new(0, 3)
    ButtonCorner.Parent = ButtonElement
    
    -- Events
    self:Connection(ButtonElement.MouseButton1Click, function()
        self:Tween(ButtonElement, {BackgroundColor3 = Color3.fromRGB(88, 103, 122)}, 0.1)
        task.wait(0.1)
        self:Tween(ButtonElement, {BackgroundColor3 = Color3.fromRGB(71, 83, 99)}, 0.1)
        Button.Callback()
    end)
    
    return Button
end

function Library:CreateTextbox(Section, Options)
    Options = Options or {}
    
    local Textbox = {
        Name = Options.Name or "Textbox",
        Placeholder = Options.Placeholder or "Enter text...",
        Default = Options.Default or "",
        Callback = Options.Callback or function() end,
        Flag = Options.Flag or tostring(math.random(1, 1000000)),
        Value = Options.Default or ""
    }
    
    -- Create textbox frame
    local TextboxFrame = Instance.new("Frame")
    TextboxFrame.Name = "TextboxFrame"
    TextboxFrame.Parent = Section.Elements.FeatureHolder
    TextboxFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TextboxFrame.BackgroundTransparency = 1.000
    TextboxFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TextboxFrame.BorderSizePixel = 0
    TextboxFrame.Size = UDim2.new(0, 270, 0, 50)
    
    local TextboxName = Instance.new("TextLabel")
    TextboxName.Name = "TextboxName"
    TextboxName.Parent = TextboxFrame
    TextboxName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TextboxName.BackgroundTransparency = 1.000
    TextboxName.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TextboxName.BorderSizePixel = 0
    TextboxName.Position = UDim2.new(0, 0, 0, 0)
    TextboxName.Size = UDim2.new(0, 150, 0, 26)
    TextboxName.Font = Enum.Font.Unknown
    TextboxName.Text = "   " .. Textbox.Name
    TextboxName.TextColor3 = Color3.fromRGB(249, 249, 249)
    TextboxName.TextSize = 17.000
    TextboxName.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Textbox input
    local TextboxInput = Instance.new("TextBox")
    TextboxInput.Name = "TextboxInput"
    TextboxInput.Parent = TextboxFrame
    TextboxInput.BackgroundColor3 = Color3.fromRGB(71, 83, 99)
    TextboxInput.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TextboxInput.BorderSizePixel = 0
    TextboxInput.Position = UDim2.new(0.037, 0, 0.52, 0)
    TextboxInput.Size = UDim2.new(0, 249, 0, 20)
    TextboxInput.Font = Enum.Font.Unknown
    TextboxInput.PlaceholderColor3 = Color3.fromRGB(178, 178, 178)
    TextboxInput.PlaceholderText = Textbox.Placeholder
    TextboxInput.Text = Textbox.Default
    TextboxInput.TextColor3 = Color3.fromRGB(255, 255, 255)
    TextboxInput.TextSize = 15.000
    TextboxInput.TextXAlignment = Enum.TextXAlignment.Left
    
    local InputCorner = Instance.new("UICorner")
    InputCorner.CornerRadius = UDim.new(0, 3)
    InputCorner.Parent = TextboxInput
    
    local InputPadding = Instance.new("UIPadding")
    InputPadding.PaddingLeft = UDim.new(0, 8)
    InputPadding.Parent = TextboxInput
    
    -- Functions
    function Textbox:Set(Text)
        Textbox.Value = Text
        Library.Flags[Textbox.Flag] = Text
        TextboxInput.Text = Text
        Textbox.Callback(Text)
    end
    
    -- Events
    self:Connection(TextboxInput.FocusLost, function()
        Textbox:Set(TextboxInput.Text)
    end)
    
    -- Initialize
    Textbox:Set(Textbox.Default)
    
    return Textbox
end

-- Initialize function
function Library:Init()
    return self
end

return Library:Init()
